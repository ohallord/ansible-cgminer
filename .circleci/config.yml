version: 2
jobs:
# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
  build:
    docker:
      #- image: circleci/python:3.6.1
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-
      - run: 
          name: Log into Docker
          command:  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: install dependencies
          command: |
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install docker-py
            pip show docker-py
            pip show requests
            docker --version
            ansible --version
            ansible-playbook -i ~/repo/localhosts build_cgminer_docker_file.yml
      #- run:
      #    name: Build And Push CGMiner Docker image
      #    command: |
      #      . venv/bin/activate
      #      ansible-playbook -i ~/repo/localhosts build_cgminer_docker_file.yml
      - save_cache: # special step to save dependency cache
          key: v2-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

  deploy:
    docker:
       - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys:
          fingerprints:
             - "87:5a:c7:c8:0e:14:01:c6:cf:9c:c5:02:e4:8b:77:88"
      - run:
          name: Check to see what the ssh file name is
          command: |
            echo "The Finger Print is $SSH_FINGERPRINT"
            ls -l ~/.ssh/*
      - run:
          name: Log into Docker
          command:  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Create Virtual Environment
          command: |
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: create host file
          command: |
            . venv/bin/activate
            ansible-playbook -i ~/repo/localhosts create_host_file.yml --extra-vars "HOST_IP=$EC2_HOST_IP SSH_KEY_NAME=$SSH_KEY_NAME "
      - run:
          name: Get Pub Key from EC2 Instance
          command: |
            ssh-keyscan $EC2_HOST_IP >>  ~/.ssh/known_hosts
      - run:
          name: install and run the docker file on the host
          command: |
             . venv/bin/activate
             ansible-playbook -i  ~/repo/hosts deploy_docker.yml --extra-vars "POOL_URL=$POOL_URL MINER_USER=$MINER_USER  MINER_PASSWD=$MINER_PASSWD"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
